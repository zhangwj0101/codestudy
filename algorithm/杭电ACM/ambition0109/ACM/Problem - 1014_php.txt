Problem - 1014 
            Online JudgeOnline ExerciseOnline TeachingOnline ContestsExercise 
            Author
            F.A.Q
            Hand In Hand
            Online Acmers 
            Forum | Discuss
            Statistical Charts
            Problem Archive
            Realtime Judge Status
            Authors Ranklist
                   C/C++/Java Exams     
            ACM Steps
            Code Challenge
            STD Contests 
            VIP Contests      
            Virtual Contests      
              DIY Contests         xtayalf
             Mail 0(0)
             Control Panel 
             Sign Out


      你的报名审核通过了吗？ 
      “2011阿里巴巴程序设计公开赛”报名截止倒计时: 还有14天~ 
      若注册列表没有贵校，请发邮件到HDUACM@QQ.COM~ 
      Uniform Generator
      Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K 
      (Java/Others)
      Total Submission(s): 6277    Accepted Submission(s): 2506


      Problem Description
      Computer simulations often require random numbers. One way to generate 
      pseudo-random numbers is via a function of the form

      seed(x+1) = [seed(x) + STEP] % MOD

      where '%' is the modulus operator. 

      Such a function will generate pseudo-random numbers (seed) between 0 and 
      MOD-1. One problem with functions of this form is that they will always 
      generate the same pattern over and over. In order to minimize this effect, 
      selecting the STEP and MOD values carefully can result in a uniform 
      distribution of all values between (and including) 0 and MOD-1. 

      For example, if STEP = 3 and MOD = 5, the function will generate the 
      series of pseudo-random numbers 0, 3, 1, 4, 2 in a repeating cycle. In 
      this example, all of the numbers between and including 0 and MOD-1 will be 
      generated every MOD iterations of the function. Note that by the nature of 
      the function to generate the same seed(x+1) every time seed(x) occurs 
      means that if a function will generate all the numbers between 0 and 
      MOD-1, it will generate pseudo-random numbers uniformly with every MOD 
      iterations. 

      If STEP = 15 and MOD = 20, the function generates the series 0, 15, 10, 5 
      (or any other repeating series if the initial seed is other than 0). This 
      is a poor selection of STEP and MOD because no initial seed will generate 
      all of the numbers from 0 and MOD-1. 

      Your program will determine if choices of STEP and MOD will generate a 
      uniform distribution of pseudo-random numbers. 

       

      Input
      Each line of input will contain a pair of integers for STEP and MOD in 
      that order (1 <= STEP, MOD <= 100000).

       

      Output
      For each line of input, your program should print the STEP value right- 
      justified in columns 1 through 10, the MOD value right-justified in 
      columns 11 through 20 and either "Good Choice" or "Bad Choice" 
      left-justified starting in column 25. The "Good Choice" message should be 
      printed when the selection of STEP and MOD will generate all the numbers 
      between and including 0 and MOD-1 when MOD numbers are generated. 
      Otherwise, your program should print the message "Bad Choice". After each 
      output test set, your program should print exactly one blank line.

       

      Sample Input
3 5
15 20
63923 99999 

      Sample Output
         3         5    Good Choice

        15        20    Bad Choice

     63923     99999    Good Choice 

      Source
      South Central USA 1996 
       

      Recommend
      JGShining
       


      Statistic | Submit | Discuss | Note

            Home | TopHangzhou Dianzi University Online Judge 3.0
            Copyright &copy; 2005-2011 HDU ACM Team. All Rights Reserved.
            Designer & Developer : Wang Rongtao LinLe GaoJie GanLu
            Total 0.000356(s) query 1, Server time : 2011-08-03 20:39:57, Gzip 
            enabled Administration 

